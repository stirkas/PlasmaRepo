using GENE executable in bin /home/stirkas/Workspace/GENE/genecode/prob05
gmake -f ../makefiles/rules.mk run
gmake[1]: Entering directory '/home/stirkas/Workspace/GENE/genecode/prob05'
Calling GENE with 24 MPI and 1 OpenMP thread(s)
 MPI_THREAD_MULTIPLE initialized.

*****************************************************
***** This is GENE 11 (release 1.8 - patch 1) *******
***** GIT branch hash: 41ff07b                *******
***** GIT master hash:                        *******
*****************************************************

WARNING: no dpdx_term treatment defined!!
         Setting dpdx_term = 'gradB_eq_curv' ... 
WARNING: no dpdx_term treatment defined!!
WARNING: no dpdx_term treatment defined!!
         Setting dpdx_term = 'gradB_eq_curv' ... 
no which_ev given in parameters, using jd
WARNING: no dpdx_term treatment defined!!
         Setting dpdx_term = 'gradB_eq_curv' ... 
WARNING: no dpdx_term treatment defined!!
WARNING: no dpdx_term treatment defined!!
         Setting dpdx_term = 'gradB_eq_curv' ... 
no which_ev given in parameters, using jd
decreasing nx0 by 1 to have all kx physical for full matrix computations
decreasing nx0 by 1 to have all kx physical for full matrix computations
no which_ev given in parameters, using jd
decreasing nx0 by 1 to have all kx physical for full matrix computations
         Setting dpdx_term = 'gradB_eq_curv' ... 
WARNING: no dpdx_term treatment defined!!
         Setting dpdx_term = 'gradB_eq_curv' ... 
no which_ev given in parameters, using jd
decreasing nx0 by 1 to have all kx physical for full matrix computations
WARNING: no dpdx_term treatment defined!!
         Setting dpdx_term = 'gradB_eq_curv' ... 
no which_ev given in parameters, using jd
decreasing nx0 by 1 to have all kx physical for full matrix computations
WARNING: no dpdx_term treatment defined!!
         Setting dpdx_term = 'gradB_eq_curv' ... 
no which_ev given in parameters, using jd
decreasing nx0 by 1 to have all kx physical for full matrix computations
WARNING: no dpdx_term treatment defined!!
         Setting dpdx_term = 'gradB_eq_curv' ... 
no which_ev given in parameters, using jd
decreasing nx0 by 1 to have all kx physical for full matrix computations
no which_ev given in parameters, using jd
decreasing nx0 by 1 to have all kx physical for full matrix computations
WARNING: no dpdx_term treatment defined!!
         Setting dpdx_term = 'gradB_eq_curv' ... 
no which_ev given in parameters, using jd
decreasing nx0 by 1 to have all kx physical for full matrix computations
         Setting dpdx_term = 'gradB_eq_curv' ... 
no which_ev given in parameters, using jd
decreasing nx0 by 1 to have all kx physical for full matrix computations
WARNING: no dpdx_term treatment defined!!
         Setting dpdx_term = 'gradB_eq_curv' ... 
no which_ev given in parameters, using jd
decreasing nx0 by 1 to have all kx physical for full matrix computations
Using a maximum of  1300.00 MB per core.
adapted autoparallelization ranges to optimize preconditioner
Using a maximum of  1300.00 MB per core.
no which_ev given in parameters, using jd
Using a maximum of  1300.00 MB per core.
Using a maximum of  1300.00 MB per core.
adapted autoparallelization ranges to optimize preconditioner
adapted autoparallelization ranges to optimize preconditioner
Using a maximum of  1300.00 MB per core.
adapted autoparallelization ranges to optimize preconditioner
Using a maximum of  1300.00 MB per core.
adapted autoparallelization ranges to optimize preconditioner
Using a maximum of  1300.00 MB per core.
Using a maximum of  1300.00 MB per core.
adapted autoparallelization ranges to optimize preconditioner
adapted autoparallelization ranges to optimize preconditioner
adapted autoparallelization ranges to optimize preconditioner
Using a maximum of  1300.00 MB per core.
adapted autoparallelization ranges to optimize preconditioner
decreasing nx0 by 1 to have all kx physical for full matrix computations
Using a maximum of  1300.00 MB per core.
adapted autoparallelization ranges to optimize preconditioner
Using a maximum of  1300.00 MB per core.
adapted autoparallelization ranges to optimize preconditioner
Using a maximum of  1300.00 MB per core.
adapted autoparallelization ranges to optimize preconditioner
N for parallel boundary condition: 1
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions
*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z

EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core
N for parallel boundary condition: 1
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions
*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z

EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core
N for parallel boundary condition: 1
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions
*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z

EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core
N for parallel boundary condition: 1
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions
N for parallel boundary condition: 1
*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z

*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************
EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z

EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core
N for parallel boundary condition: 1
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions
*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z

EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core
N for parallel boundary condition: 1
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions
*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z

EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core
N for parallel boundary condition: 1
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions
*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z

N for parallel boundary condition: 1
EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions
*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z

EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core
N for parallel boundary condition: 1
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions
N for parallel boundary condition: 1
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions
*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z
*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************

EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z

EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core
N for parallel boundary condition: 1
double precision computation
parallel direction: 4th order Arakawa scheme
=========== hyper diffusion ============
hyp_z =      2.000
hyp_v =      0.200

recurrence times for the different species:
ions       :   22.95490
electrons  :    0.53570
Kinetic electrons and ions
*************************************************************
Starting eigenvalue computation with PETSC-3.7.7/SLEPc-3.7.4
*************************************************************

initialization: alm                 
  all kx, ky modes equally excited,
  jacobian to the power of  2.000E+00 in z

EV solver/preconditioner: jd / asm
using    0 test vectors with length    253952, i.e.    0.00MB
precision:   0.1000E-03
--------------------------------------------------------------

Creating explicit representation of the linear operator without the field part
Rank of the linear operator:   253952
Memory requirements:    25.19 MB per core
Time to build explicit L_g:     2.04

--------------------------------------------------------------

using additive Schwarz preconditioning with   8 blocks per processor
Time to build explicit L_g:     1.45

--------------------------------------------------------------

Time to build explicit L_g:     1.67

--------------------------------------------------------------

using additive Schwarz preconditioning with   8 blocks per processor
using additive Schwarz preconditioning with   8 blocks per processor
Time to build explicit L_g:     1.60

--------------------------------------------------------------

Time to build explicit L_g:     1.65

--------------------------------------------------------------

Time to build explicit L_g:     1.61

--------------------------------------------------------------

using additive Schwarz preconditioning with   8 blocks per processor
using additive Schwarz preconditioning with   8 blocks per processor
Time to build explicit L_g:     1.48

--------------------------------------------------------------

using additive Schwarz preconditioning with   8 blocks per processor
using additive Schwarz preconditioning with   8 blocks per processor
Time to build explicit L_g:     1.56

--------------------------------------------------------------

Time to build explicit L_g:     1.59

--------------------------------------------------------------

Time to build explicit L_g:     1.42

--------------------------------------------------------------

Time to build explicit L_g:     1.48

--------------------------------------------------------------

using additive Schwarz preconditioning with   8 blocks per processor
using additive Schwarz preconditioning with   8 blocks per processor
using additive Schwarz preconditioning with   8 blocks per processor
Time to build explicit L_g:     1.52

--------------------------------------------------------------

using additive Schwarz preconditioning with   8 blocks per processor
using additive Schwarz preconditioning with   8 blocks per processor
number of iterations:    10
calculated      0 eigenvectors
***NO EIGENVALUES CALCULATED***
time for eigenvalue computation:    39.163 sec
******************************************************
Time for GENE simulation:     48.859 sec
number of iterations:    10
calculated      0 eigenvectors
***NO EIGENVALUES CALCULATED***
time for eigenvalue computation:    39.895 sec
******************************************************
Time for GENE simulation:     50.222 sec
number of iterations:    10
calculated      0 eigenvectors
***NO EIGENVALUES CALCULATED***
time for eigenvalue computation:    40.135 sec
******************************************************
Time for GENE simulation:     50.749 sec
number of iterations:    10
calculated      0 eigenvectors
***NO EIGENVALUES CALCULATED***
time for eigenvalue computation:    41.673 sec
******************************************************
Time for GENE simulation:     52.315 sec
number of iterations:    10
calculated      0 eigenvectors
***NO EIGENVALUES CALCULATED***
time for eigenvalue computation:    41.747 sec
******************************************************
Time for GENE simulation:     52.384 sec
number of iterations:    10
calculated      0 eigenvectors
***NO EIGENVALUES CALCULATED***
time for eigenvalue computation:    42.112 sec
******************************************************
Time for GENE simulation:     52.501 sec
number of iterations:    10
calculated      0 eigenvectors
***NO EIGENVALUES CALCULATED***
time for eigenvalue computation:    41.840 sec
******************************************************
Time for GENE simulation:     52.588 sec
number of iterations:    10
calculated      0 eigenvectors
***NO EIGENVALUES CALCULATED***
time for eigenvalue computation:    41.743 sec
******************************************************
Time for GENE simulation:     52.657 sec
number of iterations:    10
calculated      0 eigenvectors
***NO EIGENVALUES CALCULATED***
time for eigenvalue computation:    41.785 sec
******************************************************
Time for GENE simulation:     52.718 sec
number of iterations:    10
calculated      0 eigenvectors
***NO EIGENVALUES CALCULATED***
number of iterations:    10
calculated      0 eigenvectors
***NO EIGENVALUES CALCULATED***
time for eigenvalue computation:    41.784 sec
******************************************************
Time for GENE simulation:     52.784 sec
number of iterations:    10
calculated      0 eigenvectors
time for eigenvalue computation:    41.920 sec
******************************************************
***NO EIGENVALUES CALCULATED***
Time for GENE simulation:     52.794 sec
time for eigenvalue computation:    41.682 sec
******************************************************
Time for GENE simulation:     52.815 sec
Total wallclock time for GENE:     52.819 sec
Percentage of idle time at the end of the scan due to load imbalancing:      1.640 %
gmake[1]: Leaving directory '/home/stirkas/Workspace/GENE/genecode/prob05'
